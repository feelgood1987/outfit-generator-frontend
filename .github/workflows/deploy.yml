name: Build and Run in Docker

on:
  push:
    tags: ['frontend-v*.*.*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: outfits/frontend_service

jobs:
  main:
    runs-on: ubuntu-22.04
    permissions: write-all
    strategy:
      matrix:
        node-version: [20]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install pnpm
      run: npm install -g pnpm
    

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Login to Docker Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}


    - name: Build Docker image
      run: |
        docker build -t my-app .

    - name: List directory contents in Docker
      run: |
        docker run -v $(pwd):/app -w /app my-app ls -la

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
      with:
        images: feelgood1987/outfits-frontend
        tags: ${{ steps.meta.outputs.tags }}
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85
      with:
        context: .
        file: Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          SERVICE_BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          SERVICE_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          SERVICE_REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}